/*定义GROUP BANK INDEX 和其他地址变量*/
INPUT(link_base.xn)

/*1.AP INDEX*/
AP_INDEX = BACK_AP;

/*2.从地址map图中获取card模块的常驻代码段物理地址，只需写低14位，开发人员需填写，集成开始后只由集成人员修改，驱动人员不允许修改*/
SRAM_TEXT_ADDR = SRAM_AP_BACK_RCODE_ADDR;
SRAM_DATA_ADDR = SRAM_AP_BACK_DATA_ADDR;


/*3.转换为链接地址,不能修改*/
RCODE_TEXT_ADDR = RCODE_ADDR_BASE + SRAM_TEXT_ADDR;
RDATA_DATA_ADDR = RDATA_ADDR_BASE + SRAM_DATA_ADDR;
FM_ENGINE_RDATA_DATA_SIZE = SRAM_AP_BACK_DATA_SIZE - 0x200; /*0x200空间给fm_drv.drv驱动使用*/

/*只是建议起始地址，也可以往后偏移，如control_2一般不是从这个地址，如果要占全部的空间，则使用control_1*/
BANK_CONTROL_1_ADDR_BASE = (AP_BANK_BACK_CONTROL_1 << 24) + SRAM_AP_BANK_BACK_CONTROL_ADDR;

/*back ap 没有UI段*/

/*固定复用basal或者codec的空间，不能跨空间使用，跟control1和control2不一样*/
BANK_ENHANCED_1_ADDR_BASE = (AP_BANK_BACK_ENHANCED_1 << 24) + SRAM_AP_BANK_BACK_ENHANCED_1_ADDR;
BANK_ENHANCED_2_ADDR_BASE = (AP_BANK_BACK_ENHANCED_2 << 24) + SRAM_AP_BANK_BACK_ENHANCED_1_ADDR;

/*bank的实际空间大小,不能修改*/
BANK_CONTROL_SIZE = SRAM_AP_BANK_BACK_CONTROL_SIZE;
//BANK_UI_SIZE = SRAM_AP_BANK_FRONT_UI_SIZE;
BANK_ENHANCED1_SIZE = SRAM_AP_BANK_BACK_ENHANCED_1_SIZE;
BANK_ENHANCED2_SIZE = SRAM_AP_BANK_BACK_ENHANCED_2_SIZE;

/*系统允许的bank的最大空间大小，不能修改*/
AP_BANK_SPACE = BANK_SPACE;

OUTPUT_ARCH(mips)

ENTRY(__start)

SECTIONS
{
    /* case 全局数据，各AP共享 */
    . = 0x9fc1a180;
	APP_GLOBE_DATA :
    {
    	/*common globe 数据*/
    	applib_globe_data.o(.bss)
    	. = 0x100;
    }
    
    /*常驻代码*/
    .text RCODE_TEXT_ADDR  : 
    {
        /*_resident_text = ABSOLUTE(.);*/ /*只是标号*/
        /*4.填写rcode输入节*/
        fmengine_control.o(.text .rodata)
        fmengine_main.o(.rodata)
        api.a(.text)
        app_timer_rcode.o(.text)
        message_rcode_for_engine.o(.text)
        /*_resident_text_end = ABSOLUTE(.);  */     
    }
    /* 初始化了的全局数据段*/
    .data RDATA_DATA_ADDR   : 
    {
        _resident_data = ABSOLUTE(.);
        /*5.填写rdata输入节，所以文件产生的.data都被链接到这里*/
        fmengine_main.o(.data)
    }
    /*未初始化的全局数据段，系统不会进行清零*/
    .bss :
    {
        _resident_data_end = ABSOLUTE(.);
        fmengine_main.o(.bss)
        applib_app_data.o(.bss)
        fmengine_play_deal.o(.bss)
    	  common_func_data.o(.bss)
        *(.sbss)
        *(.common)
        *(common)
        . = FM_ENGINE_RDATA_DATA_SIZE - (_resident_data_end - _resident_data);
    }    

    /*6.链接bank control 0代码*/
    . = BANK_CONTROL_1_ADDR_BASE;
    OFFSET = . & 0x3ffff;
    BANK_CONTROL_1_0    : 
    {
        ctor.o(.text .rodata)        
    }=0x0/*对定位符的赋值而产生的空隙由0x0填充*/

    /*bank control 1*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_1   : 
    {
        fmengine_message_deal.o(.text .rodata) 
        . = BANK_CONTROL_SIZE;
    }=0x0
    
    /*bank control 2*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_2   : 
    {
        fmengine_message_deal_2.o(.text .rodata) 
        . = BANK_CONTROL_SIZE;
    }=0x0
    
    /*bank control 3*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_3   : 
    {
        fmengine_main.o(.text) 
        . = BANK_CONTROL_SIZE;
    }=0x0   
 
     /*bank control 4*/
    . = ((. + AP_BANK_SPACE) & (~(AP_BANK_SPACE - 1))) + OFFSET;
     BANK_CONTROL_1_4   : 
    {
        fmengine_play_deal.o(.text .rodata) 
        . = BANK_CONTROL_SIZE;
    }=0x0   
              
 }
